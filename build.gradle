plugins {
    id 'io.freefair.aspectj.post-compile-weaving' version '8.10'
    id "com.gradleup.shadow" version "8.3.2"
}

apply plugin: 'java'
sourceCompatibility = 21
version = '1.0.0'
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

configurations {
    aspectj
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    testImplementation 'de.tum.cit.ase:ares:2.0.0-SNAPSHOT' // Main project dependency
    implementation 'org.apache.commons:commons-lang3:3.14.0'

    implementation 'org.aspectj:aspectjtools:1.9.22' // AspectJ Tools dependency
    aspectj "org.aspectj:aspectjrt:1.9.22" // AspectJ Runtime dependency
    aspect 'de.tum.cit.ase:ares:2.0.0-SNAPSHOT' // Aspect library (like in aspectLibraries)

    // testImplementation(':ares-student-example-gradle')
    // testImplementation(':ares-student-example-gradle-Solution')
}

def assignmentSrcDir = "assignment/src"
def studentOutputDir = sourceSets.main.java.destinationDirectory.get()

sourceSets {
    test {
        java {
            srcDir 'test'
        }
        resources {
            srcDir 'test'
        }
    }


    main {
        java {
            srcDirs = [assignmentSrcDir]
        }
        resources {
            srcDirs = []
        }
    }
}

def forbiddenPackageFolders = [ //(2)
                                "$studentOutputDir/ch/qos/logback/",
                                "$studentOutputDir/com/github/javaparser/",
                                "$studentOutputDir/com/intellij/",
                                "$studentOutputDir/com/sun/",
                                "$studentOutputDir/de/tum/in/test/api/",
                                "$studentOutputDir/java/",
                                "$studentOutputDir/javax/",
                                "$studentOutputDir/jdk/",
                                "$studentOutputDir/net/jqwik/",
                                "$studentOutputDir/org/assertj/",
                                "$studentOutputDir/org/apache/",
                                "$studentOutputDir/org/eclipse/",
                                "$studentOutputDir/org/gradle/",
                                "$studentOutputDir/org/jacoco/",
                                "$studentOutputDir/org/json/",
                                "$studentOutputDir/org/junit/",
                                "$studentOutputDir/org/opentest4j/",
                                "$studentOutputDir/sun/",
                                "$studentOutputDir/worker/org/gradle/"
]

shadowJar {
    // Attaching the shaded artifact with classifier "agent"
    archiveClassifier.set('agent')

    // Adding manifest entries for Premain-Class and other properties
    manifest {
        attributes(
                'Premain-Class': 'de.tum.cit.ase.ares.api.aop.java.instrumentation.JavaInstrumentationAgent',
                'Can-Redefine-Classes': 'true',
                'Can-Retransform-Classes': 'true'
        )
    }

    // Include only specific artifacts in the shading process
    dependencies {
        include(dependency('de.tum.cit.ase:ares'))
    }
}

tasks.build {
    dependsOn shadowJar
}

test {
    doFirst { //(1)
        for (String packageFolder in forbiddenPackageFolders) {
            assert !file(packageFolder).exists(): "$packageFolder must not exist within the submission."
        }
    }
    defaultCharacterEncoding = 'UTF-8'
    testLogging.showStandardStreams = true
    useJUnitPlatform()

    jvmArgs = [
            "-javaagent:${shadowJar.archiveFile.get().asFile}",
            "-Xbootclasspath/a:${configurations.aspectj.singleFile}"
    ]
}




